
To get through dell firewalls, you need to set the following environment variables (change <password> to the appropriate thing):
export http_proxy='http://Americas\Gregory_Althaus:<password>@proxy.us.dell.com:80'
export HTTP_PROXY='http://Americas\Gregory_Althaus:<password>@proxy.us.dell.com:80'
export https_proxy='http://Americas\Gregory_Althaus:<password>@proxy.us.dell.com:80'
export HTTPS_PROXY='http://Americas\Gregory_Althaus:<password>@proxy.us.dell.com:80'

To get canonical based debs:
1. Edit sources.list in the /etc/apt directory
  a. Change all the #deb to deb
  b. Comment out the local repos
2. Run: apt-get update
3. Run: rm /var/cache/apt/archives/*.deb
4. Run: apt-get install <packages you need>
5. Run: cp /var/cache/apt/archives/*.deb /tftpboot/ubuntu_dvd/extra/debs

To get swift debs:
1. Add the swift repository
  a. For latest stable: add-apt-repository ppa:swift-core/ppa
  b. For latest dev: add-apt-repository ppa:swift-core/trunk
2. Run: apt-get update
3. Run: rm /var/cache/apt/archives/*.deb
4. Run: apt-get install python-swift
5. Run: apt-get install swift swift-proxy swift-account swift-object swift-container
6. Run: rm /tftpboot/ubuntu_dvd/extra/debs/openstack/swift/*
7. Run: cp /var/cache/apt/archives/*.deb /tftpboot/ubuntu_dvd/extra/debs/openstack/swift

To get nova debs:
1. Add the nova repository
  a. For latest stable: add-apt-repository ppa:nova-core/ppa
  b. For latest dev: add-apt-repository ppa:nova-core/trunk
2. Run: apt-get update
3. Run: rm /var/cache/apt/archives/*.deb
4. Run: apt-get install python-nova
5. Run: apt-get install nova-common nova-api nova-objectstore nova-volume nova-compute nova-scheduler nova-doc nova-network nova-ajax-console-proxy
6. Run: rm /tftpboot/ubuntu_dvd/extra/debs/openstack/nova/*
7. Run: cp /var/cache/apt/archives/*.deb /tftpboot/ubuntu_dvd/extra/debs/openstack/nova

To build a repos from this directory:
1. apt-get install build-essential
2. run: dpkg-scanpackages ./ /dev/null | gzip > Packages.gz

